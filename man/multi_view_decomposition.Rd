% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/joint_decomposition.R
\name{multi_view_decomposition}
\alias{multi_view_decomposition}
\title{Joint Low-Rank Decomposition for Multiple Connectivity Modalities}
\usage{
multi_view_decomposition(
  Y,
  q,
  q_common,
  V,
  MaxIteration = 5000,
  penalty = "SCAD",
  phi = 0.9,
  psi = 1,
  gamma = 3,
  espli1 = 5e-04,
  espli2 = 5e-04,
  rho = 0.95,
  silent = FALSE
)
}
\arguments{
\item{Y}{\code{list} of length \emph{K}; each element is an \verb{N × p} matrix
(subjects × vectorised upper-triangular connectomes).}

\item{q}{\code{integer} vector of length \emph{M}. Numbers of view-specific
subnetworks.}

\item{q_common}{\code{integer(1)}. Number of shared subnetworks.}

\item{V}{\code{integer(1)}. Number of brain nodes (\verb{K = V (V − 1)/2}).}

\item{MaxIteration}{Maximum outer iterations (default \code{5000}).}

\item{penalty}{\code{"SCAD"}, \code{"L1"}, \code{"Hardthreshold"}, or \code{NULL}.}

\item{phi, psi, gamma, rho}{Numeric tuning parameters (see paper /
function details).}

\item{espli1, espli2}{Absolute tolerance for change in \emph{A} and \emph{S}.}

\item{silent}{Logical; suppress progress output if \code{TRUE}.}
}
\value{
A named \code{list} with components
\itemize{
\item \code{A} – list of mixing matrices (one per modality)
\item \code{S} – list of component loadings
\item \code{S_sparse} – thresholded version of \code{S}
\item \code{theta_common}, \code{theta_spe} – lists of parameter objects
\item \code{Conver} – logical flag indicating convergence
}
}
\description{
Implements the full iterative algorithm that extracts \emph{q_common} joint
subnetworks and view-specific subnetworks (\emph{q}) from a list of subject-by-edge
matrices.  Supports optional SCAD, L1, or hard-threshold sparsity penalties
and convergence checks on both the mixing matrices (\emph{A}) and component
matrices (\emph{S}).
}
\examples{
## Not run:
# res <- joint_decomposition_multi(
#   Y            = abcd,
#   q_common     = 30,
#   q            = c(1, 1),
#   V            = 360,
#   penalty      = "SCAD",
#   phi          = 4.5,
#   psi          = 10,
#
# )
## End(Not run)

}
\seealso{
\code{\link[=joint_initial]{joint_initial()}}, \code{\link[=joint_update_approx]{joint_update_approx()}}
}
